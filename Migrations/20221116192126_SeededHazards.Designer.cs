// <auto-generated />
using System;
using ChemStoreWebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChemStoreWebApp.Migrations
{
    [DbContext(typeof(chemstoreContext))]
    [Migration("20221116192126_SeededHazards")]
    partial class SeededHazards
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChemStoreWebApp.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<int?>("Department")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("Supervisor")
                        .HasColumnType("bit");

                    b.HasKey("AccountId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Chemical", b =>
                {
                    b.Property<string>("CasNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CatalogNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChemicalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CasNumber");

                    b.ToTable("Chemical");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.ChemicalHazards", b =>
                {
                    b.Property<int>("IDChemicalHazard")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDChemicalHazard"), 1L, 1);

                    b.Property<string>("CasNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasNumberNavigationCasNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HazardId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IDChemicalHazard");

                    b.HasIndex("CasNumberNavigationCasNumber");

                    b.HasIndex("HazardId");

                    b.ToTable("ChemicalHazards");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Container", b =>
                {
                    b.Property<long>("ContainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ContainerId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CasNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasNumberNavigationCasNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Retired")
                        .HasColumnType("bit");

                    b.Property<string>("RoomId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("ContainerId");

                    b.HasIndex("CasNumberNavigationCasNumber");

                    b.HasIndex("RoomId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Container");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Hazard", b =>
                {
                    b.Property<string>("HazardId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HazardId");

                    b.ToTable("Hazard");

                    b.HasData(
                        new
                        {
                            HazardId = "Corrosion",
                            Description = "Corrosive"
                        },
                        new
                        {
                            HazardId = "Enviornmental",
                            Description = "Enviornmental Hazard"
                        },
                        new
                        {
                            HazardId = "ExclamationMark",
                            Description = "Exclamation Mark"
                        },
                        new
                        {
                            HazardId = "ExplodingBomb",
                            Description = "Exploding Bomb"
                        },
                        new
                        {
                            HazardId = "FlameOverCircle",
                            Description = "Flame Over Circle"
                        },
                        new
                        {
                            HazardId = "Flame",
                            Description = "Flame"
                        },
                        new
                        {
                            HazardId = "GasCylinder",
                            Description = "Gas Cylinder"
                        },
                        new
                        {
                            HazardId = "HealthHazard",
                            Description = "HealthHazard"
                        },
                        new
                        {
                            HazardId = "Skull",
                            Description = "Skull"
                        });
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Location", b =>
                {
                    b.Property<string>("RoomId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BuildingName")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Log", b =>
                {
                    b.Property<int>("IDLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDLog"), 1L, 1);

                    b.Property<int?>("Action")
                        .HasColumnType("int");

                    b.Property<long?>("ContainerID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("IDLog");

                    b.HasIndex("UserID");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.ChemicalHazards", b =>
                {
                    b.HasOne("ChemStoreWebApp.Models.Chemical", "CasNumberNavigation")
                        .WithMany("ChemicalHazards")
                        .HasForeignKey("CasNumberNavigationCasNumber");

                    b.HasOne("ChemStoreWebApp.Models.Hazard", "Hazard")
                        .WithMany("ChemicalHazards")
                        .HasForeignKey("HazardId");

                    b.Navigation("CasNumberNavigation");

                    b.Navigation("Hazard");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Container", b =>
                {
                    b.HasOne("ChemStoreWebApp.Models.Chemical", "CasNumberNavigation")
                        .WithMany("Container")
                        .HasForeignKey("CasNumberNavigationCasNumber");

                    b.HasOne("ChemStoreWebApp.Models.Location", "Room")
                        .WithMany("Container")
                        .HasForeignKey("RoomId");

                    b.HasOne("ChemStoreWebApp.Models.Account", "Supervisor")
                        .WithMany("Container")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CasNumberNavigation");

                    b.Navigation("Room");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Log", b =>
                {
                    b.HasOne("ChemStoreWebApp.Models.Account", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Account", b =>
                {
                    b.Navigation("Container");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Chemical", b =>
                {
                    b.Navigation("ChemicalHazards");

                    b.Navigation("Container");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Hazard", b =>
                {
                    b.Navigation("ChemicalHazards");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Location", b =>
                {
                    b.Navigation("Container");
                });
#pragma warning restore 612, 618
        }
    }
}
