// <auto-generated />
using System;
using ChemStoreWebApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChemStoreWebApp.Migrations
{
    [DbContext(typeof(chemstoreContext))]
    [Migration("20211009215237_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ChemStoreWebApp.Models.Account", b =>
                {
                    b.Property<long>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Account_ID")
                        .HasColumnType("bigint");

                    b.Property<int?>("Department")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<bool>("Supervisor")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("AccountId");

                    b.ToTable("account");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Chemical", b =>
                {
                    b.Property<string>("CasNumber")
                        .HasColumnName("CAS_Number")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("CatalogNumber")
                        .IsRequired()
                        .HasColumnName("Catalog_Number")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ChemicalName")
                        .IsRequired()
                        .HasColumnName("Chemical_Name")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CasNumber")
                        .HasName("PRIMARY");

                    b.ToTable("chemical");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.ChemicalHazards", b =>
                {
                    b.Property<string>("CasNumber")
                        .HasColumnName("CAS_Number")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("HazardId")
                        .HasColumnName("Hazard_ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("CasNumber", "HazardId")
                        .HasName("PRIMARY");

                    b.HasIndex("HazardId")
                        .HasName("Hazard_ID");

                    b.ToTable("chemical_hazards");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Container", b =>
                {
                    b.Property<long>("ContainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Container_ID")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasComment("Amount of the unit (200 g)");

                    b.Property<string>("CasNumber")
                        .IsRequired()
                        .HasColumnName("CAS_Number")
                        .HasColumnType("varchar(255)")
                        .HasComment("FK(Chemical.id)")
                        .HasMaxLength(255);

                    b.Property<bool>("Retired")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("RoomId")
                        .HasColumnName("Room_ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<long>("SupervisorId")
                        .HasColumnName("Supervisor_ID")
                        .HasColumnType("bigint")
                        .HasComment("FK(Supervisor.ID)");

                    b.Property<int>("Unit")
                        .HasColumnType("int")
                        .HasComment("ex. ML, g, gallons");

                    b.HasKey("ContainerId");

                    b.HasIndex("CasNumber")
                        .HasName("CAS_Number");

                    b.HasIndex("RoomId")
                        .HasName("Room_ID");

                    b.HasIndex("SupervisorId")
                        .HasName("Supervisor_ID");

                    b.ToTable("container");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Hazard", b =>
                {
                    b.Property<string>("HazardId")
                        .HasColumnName("Hazard_ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("HazardId");

                    b.ToTable("hazard");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Location", b =>
                {
                    b.Property<string>("RoomId")
                        .HasColumnName("Room_ID")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("BuildingName")
                        .HasColumnName("Building_Name")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnName("Room_Number")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("RoomId")
                        .HasName("PRIMARY");

                    b.ToTable("location");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("NumberOfUsers")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.ChemicalHazards", b =>
                {
                    b.HasOne("ChemStoreWebApp.Models.Chemical", "CasNumberNavigation")
                        .WithMany("ChemicalHazards")
                        .HasForeignKey("CasNumber")
                        .HasConstraintName("chemical_hazards_ibfk_1")
                        .IsRequired();

                    b.HasOne("ChemStoreWebApp.Models.Hazard", "Hazard")
                        .WithMany("ChemicalHazards")
                        .HasForeignKey("HazardId")
                        .HasConstraintName("chemical_hazards_ibfk_2")
                        .IsRequired();
                });

            modelBuilder.Entity("ChemStoreWebApp.Models.Container", b =>
                {
                    b.HasOne("ChemStoreWebApp.Models.Chemical", "CasNumberNavigation")
                        .WithMany("Container")
                        .HasForeignKey("CasNumber")
                        .HasConstraintName("container_ibfk_1")
                        .IsRequired();

                    b.HasOne("ChemStoreWebApp.Models.Location", "Room")
                        .WithMany("Container")
                        .HasForeignKey("RoomId")
                        .HasConstraintName("container_ibfk_2");

                    b.HasOne("ChemStoreWebApp.Models.Account", "Supervisor")
                        .WithMany("Container")
                        .HasForeignKey("SupervisorId")
                        .HasConstraintName("container_ibfk_3")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
