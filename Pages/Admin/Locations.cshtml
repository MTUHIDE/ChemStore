@page
@model ChemStoreWebApp.Pages.Admin.LocationModel
@using ChemStoreWebApp.Utilities

@{
    // ../Shared/_Layout.cshtml uses this for the page title
    ViewData["Title"] = "Locations Admin Page";
}

<style>
    .collapsibleList ul 
    {
        list-style-type: none; /* Remove the bullet points */
        display: none; /* Hide everything under it by default */
        margin-left: 20px; /* How far all the sub items should be indented */
    }

    .collapsibleList li 
    {
        cursor: pointer;
        user-select: none;
    }

    .collapsibleList li.open > ul 
    {
        display: block; /* Show eveything under it when opened */
    }
</style>

<html>
<head>
</head>

<body>
<ul class="collapsibleList">
    <li>
        @foreach (var item in Model.Location)
        {
            @if (item.Level == '0') // If we're base level we'll start here... How far can this depth train go? Cause its going to be hella nested
            {
                @Html.DisplayFor(modelItem => item.Name) // Are we worried if this floor isHidden or not? Cause we might need to add to the if() above to check if the location is to be hidden
                <ul class="collapsibleList">
                    <li>
                        @foreach (var item2 in Model.Location) // There's gotta be a better way than embedded for loops right??
                        {
                            @if (item2.ParentID == item.LocationID) // If this item is a child of first item... I don't need to also check this item's level right?
                            {
                                @Html.DisplayFor(modelItem => item2.Name)
                            }
                        }
                    </li>
                </ul>
            }
        }
    </li>
</ul>

<!--
<table class="table">
    <thead>
        <tr>
            @* <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Location[0].RoomNumber)
            </th> 
            <th>
                @Html.DisplayNameFor(model => model.Location[0].BuildingName)
            </th>
            <th></th> *@
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Location) {
        <tr>
            @* <td>
                        <a asp-page="./Edit" asp-authorize asp-roles="Admin" asp-route-id="@item.RoomId">Edit</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RoomNumber)
            </td>
            <td>
                @EnumHelper.GetDisplayValue((Buildings)item.BuildingName)
            </td>
            <td>
                  <button type="button" class="searchPageBtns redBtn" id="delModalBtn" onclick="updateForm('@item.RoomId')" data-toggle="modal" data-target="#confirmationModal">
                        Delete
                  </button>
            </td> *@
        </tr>
}
    </tbody>
</table>
-->
    
    <!-- Confirmation Modal -->
    <!--
    <div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header" style="justify-content:center;">
                    <h5 class="modal-title" style="font-size: 30px" id="modalLabel">Are You Sure?</h5>
                    <button type="button" class="close" style="position: absolute; right: 15px; width: 20%;" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="text-align: center">
                    <button type="button" class="btn modalBtns redBtn" data-dismiss="modal">Close</button>
                    <form method="post">
                        <input type="hidden" name="selectedLocation" id="selectedLocation" value="-1" />
                        <button type="submit" class="btn modalBtns greenBtn" id="DelButton" asp-page-handler="delete">
                            Yes
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    -->
</body>
</html>
