@page
@model ChemStoreWebApp.Pages.SearchModel
@using ChemStoreWebApp.Utilities

@{
    ViewData["Title"] = "Home Page";
}

<head>
    <link rel="stylesheet" href="\css\searchItemLayout.css" asp-append-version="true" />
</head>

<h1>Search</h1>
<div id="search">
    <div class="search">
        <button class="closeFilter" onclick="closeFilter()">
            X
        </button>
        <form>
            <input type="submit" value="Filter" class="filter" />
            <div class="s">
                CAS number: <input type="text" asp-for="searchCAS" />
            </div>
            <div class="s">
                Name: <input type="text" asp-for="searchString" />
            </div>
            <div class="s">
                Email: <input type="text" asp-for="searchEmail" />
            </div>
            <div class="s location-dropdown"> Location     &#x25BC </div>
            <div class="location-container">
                <div class="s">
                    <label for="selectBuilding">Building: </label>
                    <select asp-for="searchBuilding" asp-items="Html.GetEnumSelectList<Buildings>()" id="selectBuilding">
                        <option value="">Pick one</option>
                    </select>
                </div>
                <div class="s">
                    <label for="selectDepartment">Department: </label>
                    <select asp-for="searchDepartment" asp-items="Html.GetEnumSelectList<Departments>()" id="selectDepartment" class="selectDepartment">
                        <option value="">Pick one</option>
                    </select>
                </div>

            </div>
            <div class="s container-dropdown"> Container    &#x25BC </div>
            <div class="container-container">
                <p>Container Size: </p> <input type="text" asp-for="searchSize" />
                <select asp-for="searchUnits" asp-items="Html.GetEnumSelectList<Units>()">
                    <option value="">Pick one</option>
                </select>
                Retired? <input type="checkbox" asp-for="searchRetired" />
            </div>
            <!-- Container size: <input type="text" asp-for="searchSize" />-->
        </form>
    </div>
</div>


<div id="openFilterContainer">
    <button class="openFilter" id="openFilter" onclick="openFilter()">
        >
    </button>
</div>


<div id="results" class="results">
    <form method="post" id="deleteForm">
        <table class="table">
            <thead>
            </thead>
            <tbody>
                @if (Model.DisplayContainers.Count() > 0)
                {
                    var count = Model.DisplayContainers.Count();
                    var start = 0;
                    var end = 25;
                    var numOfPages = Model.DisplayContainers.Count() / 25;

                    @if (!Model.textEntered())
                    {
                        <p class="noFilters">No Filters Applied</p>
                    }


                    if (count < end) { end = count; }

                    <tr>
                        <td>Chemical Name</td>
                        <td>CAS Number</td>
                        <td>Hazard</td>
                        <td>Size</td>
                    </tr>
                    @for (var i = start; i < end; i++)
                    {
                        var item = Model.DisplayContainers[i];
                        <tr class="expandable">
                            <td class="a">
                                @Html.DisplayFor(modelItem => item.chem.ChemicalName)
                            </td>
                            <td class="a">
                                @Html.DisplayFor(modelItem => item.chem.CasNumber)
                            </td>
                            <td class="a">
                                @Html.DisplayFor(modelItem => item.chem.ChemicalHazards)
                            </td>
                            <td class="a">
                                @Html.DisplayFor(modelItem => item.con.Amount)
                                @EnumHelper.GetDisplayValue((Units)item.con.Unit)
                            </td>
                            <td class="a">
                                <button type="button" class="blankImgButton" name="editTableBtn" data-toggle="modal" data-target="#edit-modal" onclick="getEditModal(@i);">
                                    <img src="assets\edit_symbol.png" class="img edit" id="buttonImg" style="width: 15px">
                                </button>
                                <input name="chemicalsToDelete" type="checkbox" onchange="toggleDeleteButton()" onclick="event.stopPropagation()" value="@item.con.ContainerId" style="display: none">
                            </td>
                        </tr>
                        <tr class="moreInformation">
                            <td class="building">
                                @EnumHelper.GetDisplayValue((Buildings)item.loc.BuildingName)
                                @Html.DisplayFor(modelItem => item.loc.RoomNumber)
                            </td>
                            <td class="dpt">
                                @EnumHelper.GetDisplayValue((Departments)item.supervisor.Department) <!--Displayed department for testing, you can remove if not needed-->
                            </td>
                            <td class="b">
                                <a asp-page="Admin/Chemicals/Details" asp-route-id="@item.chem.CasNumber">More Details</a>
                            </td>
                            <td class="b">
                                <a asp-page="Admin/Hazards/Details" asp-route-id="@item.chem.ChemicalHazards">Safety Data Sheet</a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <p>No results found</p>
                }
            </tbody>
        </table>

        <div class="pageSelectors">
            <!--<a href=""> << </a>
            <a href=""> < </a>-->
            @for (var i = 1; i <= Model.DisplayContainers.Count() / 25 + 1; i++)
            {
                <a href=""> @i.ToString()  </a>
            }

            <a href=""> > </a>
            <a href=""> >> </a>
            <div style="margin-left: auto">
                <div id="regularDiv">
                    <button type="button" class="searchPageBtns greenBtn" id="addChemicalBtn">
                        Add
                    </button>
                    <button type="button" class="searchPageBtns redBtn" style="pointer-events: @((Model.DisplayContainers.Count() == 0) ? " none" : "initial" )" id="initiateDelBtn" onclick="deleteModeOn()" disabled="@((Model.DisplayContainers.Count() == 0) ? " disabled" : null)">
                        Remove
                    </button>
                </div>
                <div id="deleteDiv" style="display: none">
                    <!-- Button trigger for modal -->
                    <button type="button" class="searchPageBtns redBtn" id="delModalBtn" style="pointer-events: none;" data-toggle="modal" data-target="#confirmatioinModal" disabled>
                        Delete
                    </button>
                    <button type="button" class="searchPageBtns regBtn" onclick="deleteModeOff()" id="cancelDelBtn">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<!--New Create Modal HTML-->

<button data-toggle="modal" data-target="#details-modal" onclick="getRoomsOfBuilding()">Add Chemical</button>

<div class="modal fade" tabindex="-1" role="dialog" id="details-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Chemical</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post" id="form1">
                    <input type="text" name="Chemical Name" placeholder="Chemical Name" value="@Request.Query["Chemical Name"]" />
                    <input type="text" name="CAS Number" placeholder="CAS Number" value="@Request.Query["CAS Number"]" />
                    <input type="text" name="Supervisor" placeholder="Supervisor" value="@Request.Query["Supervisor"]" />
                    <input type="text" name="Amount" placeholder="Amount" value="@Request.Query["Amount"]" />
                    <select asp-for="buildingIndex" asp-items="Html.GetEnumSelectList<Buildings>()" onchange="getRoomsOfBuilding()">
                        <option value="" disabled selected hidden>Building</option>
                    </select>
                    <select asp-for="RoomIndex">
                        <option value="" disabled selected hidden>Room Number</option>
                    </select>
                    <select name="Hazard" value="@Request.Query["Hazard"]">
                        <option value="" disabled selected hidden>Hazard</option>
                    </select>
                    <button type="button" data-dismiss="modal">Cancel</button>
                    <input type="submit" value="Add" asp-page-handler="create" />
                </form>
            </div>
        </div>
    </div>
</div>

<!--New Edit Modal HTML-->

    <div class="modal fade" tabindex="-1" role="dialog" id="edit-modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Chemical</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form method="post" id="form1">
                        <input type="text" id="editChemName" name="Chemical Name" placeholder="Chemical Name" value="" />
                        <input type="text" id="editChemCas" name="CAS Number" placeholder="CAS Number" value="" />
                        <input type="text" id="editChemSup" name="Supervisor" placeholder="Supervisor" value="" />
                        <input type="text" id="editChemSize" name="Amount" placeholder="Amount" value="" />
                        <input type="hidden" id="ContainerID" name="ContainerID" value="" />
                        <select asp-for="buildingEditIndex" asp-items="Html.GetEnumSelectList<Buildings>()" onchange="getEditRoomsOfBuilding(1)">
                        </select>
                        <select asp-for="RoomEditIndex">
                        </select>
                        <select name="Hazard" value="">
                            <option value="" disabled selected hidden>Hazard</option>
                        </select>
                        <button type="button" data-dismiss="modal">Cancel</button>
                        <input type="submit" value="Save" asp-page-handler="edit" />
                    </form>
                </div>
            </div>
        </div>
    </div>

<!-- Confirmation Modal -->
<div class="modal fade" id="confirmatioinModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modalcss">
            <div class="modal-header" style="justify-content:center;">
                <h5 class="modal-title" style="font-size: 30px" id="modalLabel">Are You Sure?</h5>
                <button type="button" class="close" style="position: absolute; right: 15px; width: 20%;" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body" style="text-align: center">
                <button type="button" class="btn modalBtns regBtn" data-dismiss="modal">Close</button>
                <button type="submit" class="btn modalBtns redBtn" id="DelButton" form="deleteForm" asp-page-handler="delete">
                    Yes
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    function getRoomsOfBuilding() {
        var ex = document.getElementById('buildingIndex');
        var str = ex.options[ex.selectedIndex].value;
        document.getElementById('RoomIndex').innerHTML = "<option disabled selected hidden value=''>Room Number</option>";
        fetch(`?handler=SubCategories&buildingIndex=${str}`)
            .then((response) => {
                return response.json();
            })
            .then((data) => {
                Array.prototype.forEach.call(data, function (item, i) {
                    document.getElementById('RoomIndex').innerHTML += `<option value="${item.roomNumber}">${item.roomNumber}</option>`
                });
            });
    }

    function getEditRoomsOfBuilding(initGet) {
        var ex = document.getElementById('buildingEditIndex');
        var str = ex.options[ex.selectedIndex].value;
        var currRoomNumber = document.getElementById('RoomEditIndex').value;
        fetch(`?handler=EditCategories&buildingEditIndex=${str}`)
            .then((response) => {
                return response.json();
            })
            .then((data) => {
                if (initGet == 0) {
                    document.getElementById('RoomEditIndex').innerHTML = `<option selected hidden value="${currRoomNumber}">${currRoomNumber}</option>`;
                } else {
                    document.getElementById('RoomEditIndex').innerHTML = "<option disabled selected hidden value=''>Room Number</option>";
                }
                Array.prototype.forEach.call(data, function (item, i) {
                    document.getElementById('RoomEditIndex').innerHTML += `<option value="${item.roomNumber}">${item.roomNumber}</option>`
                });
            });
    }

    function getEditModal(index) {
        fetch(`?handler=ListItem&containerListIndex=${index}`)
            .then((response) => {
                return response.json();
            })
            .then((data) => {
                document.getElementById('editChemName').value = data[0];
                document.getElementById('editChemCas').value = data[1];
                document.getElementById('editChemSup').value = data[2];
                document.getElementById('editChemSize').value = data[3];
                document.getElementById('ContainerID').value = data[4];
                document.getElementById('buildingEditIndex').value = data[5];
                document.getElementById('RoomEditIndex').innerHTML = `<option value="${data[6]}">${data[6]}</option>`
                getEditRoomsOfBuilding(0);
            });
    }
</script>

<script>
    function showCreateAlert() {

        var hasError = @Model.createError.ToString().ToLower();
        if (hasError) {
            window.alert('Error: Invalid Data');
        }

    }
</script>

<script>
    //Enables or disables the delete button
    function toggleDeleteButton() {
        var checkboxes = document.getElementsByName('chemicalsToDelete'); //All the checkboxes on the chemicals
        var sendbtn = document.getElementById('delModalBtn');

        /*Determines if there is a check in one of the boxes. Can be simplified into a loop that checks the
         status of each of the checkboxes from the checkboxes array*/
        var checkedOne = Array.prototype.slice.call(checkboxes).some(x => x.checked);

        //style="display: none/initial;"
        sendbtn.style.pointerEvents = checkedOne ? "initial" : "none";
        sendbtn.disabled = checkedOne ? false : true;
    }

    //Replaces edit image buttons with checkboxes to delete containers and changes buttons to cancel and delete
    function deleteModeOn() {
        //Hides the edit image buttons
        var editBtns = document.getElementsByName('editTableBtn');
        editBtns.forEach((val, index) => editBtns[index].style.display = "none");

        //Displays the checkboxes
        var checkboxes = document.getElementsByName('chemicalsToDelete');
        checkboxes.forEach((val, index) => checkboxes[index].style.display = "initial");

        //Changes the buttons
        var deleteDiv = document.getElementById('deleteDiv');
        deleteDiv.style.display = "initial";
        var regularDiv = document.getElementById('regularDiv');
        regularDiv.style.display = "none";
    }

    //Replaces checkboxes with edit image buttons to edit containers and changes buttons to remove and add
    function deleteModeOff() {
        //Hides and deselects the checkboxes
        var checkboxes = document.getElementsByName('chemicalsToDelete');
        checkboxes.forEach((val, index) => {
            checkboxes[index].style.display = "none";
            checkboxes[index].checked = false;
        });

        //Shows edit image buttons
        var editBtns = document.getElementsByName('editTableBtn');
        editBtns.forEach((val, index) => editBtns[index].style.display = "initial");

        //Changes buttons shown
        var deleteDiv = document.getElementById('deleteDiv');
        deleteDiv.style.display = "none";
        var regularDiv = document.getElementById('regularDiv');
        regularDiv.style.display = "initial";

        var sendbtn = document.getElementById('delModalBtn');
        sendbtn.disabled = true;
    }

</script>

<script>
    // Opens and closes the filter sections
    function closeFilter() {
        document.getElementById("search").style.display = "none";
        document.getElementById("openFilter").style.display = "block";
    }
    function openFilter() {
        document.getElementById("search").style.display = "block";
        document.getElementById("openFiler").style.display = "none";
    }

</script>
<script>
    var coll = document.getElementsByClassName("collapsible");
    var i;

    for (i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
            } else {
                content.style.display = "block";
            }
        });
    }
</script>
<script>
    var coll = document.getElementsByClassName("expandable");
    var i;

    for (i = 0; i < coll.length; i++) {
        coll[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var content = this.nextElementSibling;
            if (content.style.display === "block") {
                content.style.display = "none";
                this.style.backgroundColor = "rgb(225,225,225)";
            } else {
                content.style.display = "block";
                this.style.backgroundColor = "rgb(204,204,204)";
            }
        });
    }
</script>

<script>
    // The script to control the location filter selection
    var dropdown = document.getElementsByClassName("location-dropdown");
    var i;

    for (i = 0; i < dropdown.length; i++) {
        dropdown[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var dropdownContent = this.nextElementSibling;
            if (dropdownContent.style.display === "block") {
                dropdownContent.style.display = "none";
            } else {
                dropdownContent.style.display = "block";
            }
        });
    }
</script>

<script>
    // The script to control the container filter selection
    var dropdown = document.getElementsByClassName("container-dropdown");
    var i;

    for (i = 0; i < dropdown.length; i++) {
        dropdown[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var dropdownContent = this.nextElementSibling;
            if (dropdownContent.style.display === "block") {
                dropdownContent.style.display = "none";
            } else {
                dropdownContent.style.display = "block";
            }
        });
    }
</script>